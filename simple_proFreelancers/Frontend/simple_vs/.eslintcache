[{"D:\\Simpler\\Frontend\\simple_vs\\src\\index.js":"1","D:\\Simpler\\Frontend\\simple_vs\\src\\reportWebVitals.js":"2","D:\\Simpler\\Frontend\\simple_vs\\src\\App.js":"3","D:\\Simpler\\Frontend\\simple_vs\\src\\store\\reducer.js":"4","D:\\Simpler\\Frontend\\simple_vs\\src\\Components\\Signup.js":"5","D:\\Simpler\\Frontend\\simple_vs\\src\\Components\\Mainsection.js":"6","D:\\Simpler\\Frontend\\simple_vs\\src\\Components\\Login.js":"7","D:\\Simpler\\Frontend\\simple_vs\\src\\Components\\Questions.js":"8"},{"size":734,"mtime":1611998696566,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":766,"mtime":1611999530589,"results":"12","hashOfConfig":"10"},{"size":363,"mtime":1611998696567,"results":"13","hashOfConfig":"10"},{"size":4252,"mtime":1611938910507,"results":"14","hashOfConfig":"10"},{"size":3724,"mtime":1612013787361,"results":"15","hashOfConfig":"10"},{"size":3296,"mtime":1611998696565,"results":"16","hashOfConfig":"10"},{"size":1239,"mtime":1612013608540,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"e7hmkx",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Simpler\\Frontend\\simple_vs\\src\\index.js",[],["37","38"],"D:\\Simpler\\Frontend\\simple_vs\\src\\reportWebVitals.js",[],"D:\\Simpler\\Frontend\\simple_vs\\src\\App.js",["39","40","41"],"D:\\Simpler\\Frontend\\simple_vs\\src\\store\\reducer.js",[],"D:\\Simpler\\Frontend\\simple_vs\\src\\Components\\Signup.js",["42","43","44","45","46","47","48"],"import { React, useEffect, useState } from \"react\";\r\nimport Signupvec from \"../Assets/signupvec.svg\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport bgsignup from \"../Assets/bgsignup.svg\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Link,\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nconst url = \"http://127.0.0.1:5000/api/signup\"; //add your url here and it will work\r\n\r\nfunction Signup() {\r\n  const [values, setValues] = useState({\r\n    firstName: \"test123\",\r\n    lastName: \"test123\",\r\n    emailID: \"test123@gmail.com\",\r\n    password: \"test123\",\r\n    confirmPassword: \"test123\",\r\n  });\r\n  // const [formvalues,setformValues]=useState();\r\n\r\n  const handleChange = (e) => {\r\n    // e.preverntDefault();\r\n    const inpname = e.target.name;\r\n    const inpvalue = e.target.value;\r\n\r\n    setValues({ ...values, [inpname]: inpvalue });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (values.firstName.length < 5) {\r\n      alert(\"Less characters in firstname (minimum length 6)\");\r\n      setValues({ ...values, firstName: \"\" });\r\n      return;\r\n    }\r\n    if (values.password !== values.confirmPassword) {\r\n      alert(\"Password and confirm password do not match\");\r\n      setValues({ ...values, password: \"\", confirmPassword: \"\" });\r\n      return;\r\n    }\r\n    // console.log(values);\r\n\r\n    axios.post(`${url}`, values).then((res) => {\r\n      console.log(res.data);\r\n    });\r\n    setValues({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      emailID: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        src={bgsignup}\r\n        style={{ position: \"relative\", left: \"-60px\", top: \"-400px\" }}\r\n      />\r\n      <img src={Signupvec} alt=\"image\" className=\"signvec\" />\r\n      <div className=\"signin\">\r\n        <h1 style={{ textAlign: \"center\", position: \"relative\", top: \"50px\" }}>\r\n          <u>Signup</u>\r\n        </h1>\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            position: \"relative\",\r\n            top: \"70px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          Enter your details to create a free account\r\n        </p>\r\n\r\n        <form className=\"inputs signinp\" onSubmit={handleSubmit}>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              placeholder=\" First Name\"\r\n              onChange={handleChange}\r\n              value={values.firstName}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              placeholder=\" Last Name\"\r\n              onChange={handleChange}\r\n              value={values.lastName}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <input\r\n            type=\"email\"\r\n            name=\"emailID\"\r\n            placeholder=\" Email\"\r\n            style={{ width: \"425px\" }}\r\n            onChange={handleChange}\r\n            value={values.emailID}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\" Password\"\r\n            style={{ width: \"425px\" }}\r\n            onChange={handleChange}\r\n            value={values.password}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\" Confirm Password\"\r\n            style={{ width: \"425px\" }}\r\n            onChange={handleChange}\r\n            value={values.confirmPassword}\r\n            required\r\n          />\r\n\r\n          <button className=\"buttons btnsgn\" type=\"submit\">\r\n            Sign up <FontAwesomeIcon icon={faSignInAlt} />\r\n          </button>\r\n        </form>\r\n\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            position: \"relative\",\r\n            bottom: \"-150px\",\r\n          }}\r\n        >\r\n          Already have an account ?{\" \"}\r\n          <span>\r\n            <Link to=\"/login\" style={{ color: \"#FFC93C\" }}>\r\n              Login\r\n            </Link>\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","D:\\Simpler\\Frontend\\simple_vs\\src\\Components\\Mainsection.js",["49"],"D:\\Simpler\\Frontend\\simple_vs\\src\\Components\\Login.js",["50","51","52","53","54"],"import React, { useState } from \"react\";\r\nimport {\r\n  Link,\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Vector from \"../Assets/vector1.svg\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst url = \"http://127.0.0.1:5000/api/login\"; //add url here\r\nfunction Login(props) {\r\n  const [details, setDetails] = useState({\r\n    emailID: \"\",\r\n    password: \"\",\r\n  });\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setDetails({ ...details, [name]: value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(details);\r\n    // const config = {\r\n    //   headers: {\r\n    //     \"Access-Control-Allow-Origin\": \"*\",\r\n    //   },\r\n    // };\r\n    axios\r\n      .post(`${url}`, details)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        //add the conditions here,\r\n        //if the login is successful (condition 1)\r\n        onLogin(details.emailID); //then execute this\r\n        //else do alert here\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    const onLogin = (emailID) => {\r\n      props.onLogin(emailID);\r\n    };\r\n    setDetails({\r\n      emailID: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"mainlogin\">\r\n      <img src={Vector} alt=\"image\" className=\"vec1\" />\r\n      <div className=\"login\">\r\n        <h1 style={{ textAlign: \"center\", position: \"relative\", top: \"50px\" }}>\r\n          <u>Login</u>\r\n        </h1>\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            position: \"relative\",\r\n            top: \"70px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          Login to your account\r\n        </p>\r\n        <form className=\"inputs\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"email\"\r\n            name=\"emailID\"\r\n            placeholder=\"Email\"\r\n            onChange={handleChange}\r\n            value={details.emailID}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={handleChange}\r\n            required\r\n            value={details.password}\r\n          />\r\n          <button className=\"buttons btnsgn\" type=\"submit\">\r\n            Login <FontAwesomeIcon icon={faSignInAlt} />\r\n          </button>\r\n        </form>\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            position: \"relative\",\r\n            bottom: \"-150px\",\r\n          }}\r\n        >\r\n          Don't have an account ?{\" \"}\r\n          <span>\r\n            {\" \"}\r\n            <Link to=\"/\" style={{ color: \"#FFC93C\" }}>\r\n              Signup\r\n            </Link>\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogin: (emailID) => dispatch({ type: \"ON_LOGIN\", emailID: emailID }),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLogin: state.isLogin,\r\n    UserEmailID: state.UserEmailID,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","D:\\Simpler\\Frontend\\simple_vs\\src\\Components\\Questions.js",["55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":35,"nodeType":"62","messageId":"63","endLine":2,"endColumn":39},{"ruleId":"60","severity":1,"message":"64","line":6,"column":8,"nodeType":"62","messageId":"63","endLine":6,"endColumn":10},{"ruleId":"65","severity":1,"message":"66","line":14,"column":9,"nodeType":"67","endLine":14,"endColumn":44},{"ruleId":"60","severity":1,"message":"68","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"69","line":9,"column":20,"nodeType":"62","messageId":"63","endLine":9,"endColumn":26},{"ruleId":"60","severity":1,"message":"70","line":10,"column":3,"nodeType":"62","messageId":"63","endLine":10,"endColumn":8},{"ruleId":"60","severity":1,"message":"71","line":11,"column":3,"nodeType":"62","messageId":"63","endLine":11,"endColumn":9},{"ruleId":"60","severity":1,"message":"72","line":12,"column":3,"nodeType":"62","messageId":"63","endLine":12,"endColumn":11},{"ruleId":"65","severity":1,"message":"66","line":62,"column":7,"nodeType":"67","endLine":65,"endColumn":9},{"ruleId":"73","severity":1,"message":"74","line":66,"column":7,"nodeType":"67","endLine":66,"endColumn":62},{"ruleId":"60","severity":1,"message":"75","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":17},{"ruleId":"60","severity":1,"message":"69","line":4,"column":20,"nodeType":"62","messageId":"63","endLine":4,"endColumn":26},{"ruleId":"60","severity":1,"message":"70","line":5,"column":3,"nodeType":"62","messageId":"63","endLine":5,"endColumn":8},{"ruleId":"60","severity":1,"message":"71","line":6,"column":3,"nodeType":"62","messageId":"63","endLine":6,"endColumn":9},{"ruleId":"60","severity":1,"message":"72","line":7,"column":3,"nodeType":"62","messageId":"63","endLine":7,"endColumn":11},{"ruleId":"73","severity":1,"message":"74","line":56,"column":7,"nodeType":"67","endLine":56,"endColumn":56},{"ruleId":"60","severity":1,"message":"76","line":7,"column":14,"nodeType":"62","messageId":"63","endLine":7,"endColumn":26},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'bg' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'faCross' is defined but never used.","'handleChange' is defined but never used.","no-global-assign","no-unsafe-negation"]